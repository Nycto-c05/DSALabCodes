#include<iostream>
using namespace std;

struct node
{
    int data;
    struct node *l;
    struct node *r;
};

struct node *create(int val)
{
    struct node *temp = new node;
    temp->data = val;
    temp->l = NULL;
    temp->r = NULL;
    cout <<"\n"<< val << "\n";
    return temp;
}

struct node *insert_nn(struct node *nn, int val)
{
    if (nn == NULL)
    {
        return create(val);
    }

    if (val < nn->data)
    {
        nn->l = insert_nn(nn->l, val);
    }
    else if (val > nn->data)
    {
        nn->r = insert_nn(nn->r, val);
    }
    return nn;
};

void preorder(struct node *root)
{
    if(root != NULL)
    {
        cout<<root->data;
        preorder(root->l);
        preorder(root->l);
    }
}
void inorder(struct node *root)
{
    if(root != NULL)
    {
        inorder(root->l);
        cout<<root->data;
        inorder(root->l);
    }
}
void postorder(struct node *root)
{
    if(root != NULL)
    {
        postorder(root->l);
        postorder(root->l);
        cout<<root->data;
    }
}
void search(struct node *root, int value)
{
	while (root != NULL)
    {
      if (value > root->data)
	root = root->r;

      else if (value < root->data)
	root = root->l;

      else
	  cout<<"error";
    }
}

int main()
{
    struct node *root = NULL;
    char ch, key;

    do{
    {
        int op;
        cout << "What operation would you like to perform: ";
        cout << "\n1.Create BST \n2.Insert node \n3.Preorder Trav \n4.Inorder Trav \n5.Postorder Trav \n6.Search \n7.Exit \nEnter your choice: ";
        cin >> op;

        if (op == 1)
        {
            int n;
            cout << "Enter value of root: ";
            cin >> n;
            root = insert_nn(root, n);
            cout << "\n BST created successfully \n";
        }
        else if (op == 2)
        {
            int a;
            cout << "Enter value to insert: ";
            cin >> a;
            insert_nn(root, a);
        }
        else if (op == 3)
        {
            preorder(root);
        }
        else if (op == 4)
        {
            inorder(root);
        }
        else if (op == 5)
        {
            postorder(root);
        }
        else if (op == 6)
        {
        	cout<<"Enter key to search: ";
        	cin>>key;
        	search(root, key);
		}
        else
        {
            break;
        }

        cout<<"Do you wish to continue, y/n: ";
        cin>>ch; 
       }
   }
   while (ch == 'y');
}
