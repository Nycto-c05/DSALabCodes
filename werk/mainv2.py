lst = ["id_unique",
"org_unit",
"ccy_dnmntn",
"orgnl_ccy_code",
"enm_pstn_clss",
"enm_pstn_sub_clss",
"enm_expsr_clcltn_mthd",
"enm_sa_rw_mthd",
"enm_irb_rw_mthd",
"enm_scrtstn_rscrtstn",
"enm_role_scrtstn_prcss",
"id_scrtstn",
"intl_mrgn_ind",
"enm_crm_clss",
"enm_crm_sub_clss",
"id_cntrprty",
"cntrprty_org_unit",
"id_trd",
"id_nttng_agrmnt",
"nttng_agrmnt_ccy",
"id_mrgn_agrmnt",
"id_clltrl_pool",
"id_unfndd_crm_pool",
"id_real_estt_pool",
"expsr_vl",
"spcfc_adj_prvsns",
"imm_expsr_vl",
"ovrrd_cptl_ddctn_amnt",
"drvtv_mrkt_vl",
"drvtv_mrkt_vl_ccy",
"ntnl_amnt",
"drvtv_ntnl_amnt_ccy",
"enm_trdng_bnkng",
"enm_on_off_bs",
"enm_crdt_drvtv_typ",
"lng_sttlmnt_trnsctn_ind",
"lrg_nttng_set_ind",
"illqd_ind",
"ovrrd_min_hldng_prd",
"rvltn_prd_dys",
"hrct_pstd_clltrl_ind",
"spcfc_wrng_way_rsk_ind",
"dly_prc_ind",
"instr_qtd_ind",
"enm_otc_etd",
"dt_trd",
"dt_strt",
"dt_sttlmnt",
"dt_mtrty",
"dt_nxt_rst",
"cntry_prprty",
"enm_prprty_typ",
"unsttld_mrkt_vl",
"ovrrd_free_vl_trnsfrrd",
"dt_free_dlvry_frst",
"dt_free_dlvry_scnd",
"hgh_rsk_itm_ind",
"dmstc_ccy_ind",
"instr_sbrdntd_ind",
"addtnl_sa_rw",
"enm_ccp_trd_typ",
"enm_ccp_role_typ",
"enm_ccp_lk_thrgh_rw",
"enm_ccp_zero_expsr_rule",
"id_indrct_ccp_cntrprty",
"id_clltrl_grntr",
"id_scrty",
"id_issr",
"dt_instr_strt",
"dt_instr_mtrty",
"id_lr_wrttn_cd_nttng",
"lr_cd_fair_vl",
"lr_cash_vrtn_mrgn_elgbl_ind",
"id_lr_sft_cash_nttng",
"enm_sft_bnk_role",
"enm_sft_agnt_clcltn_mthd",
"lr_spcfc_cr_adj",
"id_saccr_hdgng_set",
"id_saccr_ntnl_grp",
"saccr_trd_ntnl",
"enm_saccr_typ",
"enm_saccr_sprvsry_delta_mthd",
"ovrrd_sprvsry_delta",
"dt_saccr_strt",
"dt_saccr_mtrty",
"dt_saccr_end",
"dt_ltst_exrcs",
"saccr_nica_ind",
"saccr_thrshld_amnt",
"saccr_min_trnsfr_amnt",
"saccr_strk_prc",
"attchmnt_pnt",
"dtchmnt_pnt",
"saccr_undrlyng_prc",
"enm_invstmnt_typ",
"enm_cptl_tier",
"cr_excld_ind",
"ovrrd_cva_excld_ind",
"le_excld_ind",
"lr_excld_ind",
"enm_mtrty_mthd",
"trnch_avg_mtrty",
"dt_trnch_mtrty",
"enm_trnch_snrty",
"abcp_ind",
"enm_scrtstn_typ",
"id_pldg",
"pd",
"ovrrd_dltn_rsk_pd",
"lgd",
"ovrrd_dltn_rsk_lgd",
"estmt_el",
"ovrrd_irb_mtrty",
"var_expctd_loss_vl",
"enm_eqty_pd_floor_typ",
"prvt_eqty_dvrsfd_ind",
"use_sme_r_mthd_ind",
"enm_irb_rcvbls_crm_typ",
"a_irb_rl_estt_crm_vl",
"f_irb_rl_estt_crm_vl",
"enm_mrgn_typ",
"imm_drvtv_pstn_ind",
"apply_ccf_bfr_crm_ind",
"imm_drvtv_run_excld_ind",
"imm_sft_pstn_ind",
"oem_trd_ntnl",
"ovrrd_oem_mtrty_yrs",
"synthtc_scrtstn_crm_ind",
"scrtstn_cptl_ddctn_ind",
"eepe_crrnt_mrkt_data",
"eepe_strss_clbrtn",
"dt_mtrty_crrnt_mrkt_data",
"dt_mtrty_strss_clbrtn",
"sa_cva_ind",
"ovrrd_enm_expsr_clss",
"enm_rw_allctn_mthd",
"enm_trd_fnnc",
"ovrrd_sa_rw",
"ovrrd_irb_rw",
"eu_dmstc_ccy_ind",
"issr_dmstc_ccy_ind",
"clltrl_grntr_dmstc_ccy_ind",
"min_elgblty_zero_hrct_ind",
"irb_sbsttt_lgd_ind",
"zero_hrct_mna_elgblty_ind",
"enm_off_bs_rsk_ctgry",
"enm_irb_off_bs_rsk_ctgry",
"ovrrd_irb_ccf",
"id_dflt_fnd",
"pst_due_ind",
"irb_pst_due_ind",
"imprd_ind",
"rtl_cmplnc_ind",
"elgbl_flly_cvr_ind",
"prmm_upfrnt_ind",
"ovrrd_nxt_rst_dt_mnths",
"dt_undrlyng_mtrty",
"ovrrd_undrlyng_rsdl_mtrty_mnth",
"rprt_indrct_expsrs_as_qccp_ind",
"enm_clltrl_allctn_mthd",
"ovrrd_clltrl_elgblty_ind",
"min_crm_rqrmnts_ind",
"rpt_trt_clltrl_as_drvtv_ind",
"ovrrd_10_dy_hrct",
"enm_use_prty_rtng_typ",
"ovrrd_enm_instr_cqs_lt",
"ovrrd_enm_instr_cqs_st",
"ovrrd_rsdl_mtrty_mnths",
"ovrrd_orgnl_mtrty_mnths",
"ovrrd_instr_orgnl_mtrty_dys",
"ovrrd_instr_rsdl_mtrty_mnths",
"free_dlvrs_cptl_ddctn_ind",
"ovrrd_overdue_bsnss_dys",
"dt_ifi_mtrty",
"ovrrd_ifi_rsdl_mtrty_yrs",
"id_ifi_nttng",
"ifi_qhnf_excld_ind",
"nmbr_of_oblgrs",
"a_irb_elgbl_fnncl_clltrl_vl",
"real_estt_crm_vl",
"othr_physcl_clltrl_vl",
"rcvbls_clltrl_vl",
"a_irb_unfndd_crm_vl",
"id_oblgr_pool",
"irb_le_own_estmts_fcp_vl",
"irb_le_own_estmts_rl_estt_vl",
"enm_rpt_irb_slttng_rw_mthd",
"qrre_ind",
"sffcnt_dfntn_of_dflt_ind",
"ovrrd_irb_r",
"ovrrd_el_prcntg",
"spclsd_lndng_ind",
"enm_irb_spclsd_lndng_ctgry",
"enm_irb_spclsd_lndng_sub_ctgry",
"lgd_adjstd_crm_ind",
"rvldt_tb_ind",
"enm_le_main_ctgry",
"expsr_undrlyng_assts_ind",
"enm_le_exmpt_rsn",
"le_exmpt_ind",
"exprt_crdt_schm_ind",
"enm_spcfc_cntrct_clauses",
"enm_lr_exmpt_rsn",
"crryng_amnt",
"gnrl_gvt_ind",
"id_grntr",
"id_saccr_prfctly_mtchng_nttng",
"infltn_rsk_ind",
"mpor",
"saccr_bsnss_dys",
"ovrrd_intl_mtrty_dys",
"enm_trnch_lvl",
"corep_incptn_cqs_lt",
"corep_incptn_cqs_st",
"enm_sec_erba_rsn",
"ovrrd_enm_cqs_sbgrp_lt",
"ovrrd_enm_cqs_sbgrp_st",
"enm_qlfyng_dffrnttd_cptl",
"sts_ind",
"scrtstn_ksa",
"dlnqncy_w",
"sgnfcnt_rsk_trnsfr_ind",
"wghtd_avg_undrlyng_rw",
"enm_dlnqncy_unkwn_prcnt",
"ovrrd_ka",
"irb_rw_scalar",
"saccr_excld_ind",
"enm_sa_prtl_use",
"enm_saccr_asst_clss",
"enm_saccr_sbclss",
"avg_sprvsry_fctr_prcntg",
"prmm_rcvbl_amnt",
"prdfnd_pymnt_ind",
"prdfnd_pymnt_amnt",
"bnkrptcy_rmt_ind",
"apply_infrstrctr_sf_ind",
"pnsnr_emply_loan_ind",
"enm_pre_crm_sqnc",
"tri_prty_alt_trtmnt_ind",
"id_trprty_agnt",
"accrd_intrst_vl",
"lr_gnrl_crdt_rsk_adjstmnt",
"lr_svngs_accnt_amnt",
"irb_le_fccm_only_ind",
"enm_ciu_mthd",
"crdt_drvtvs_crm_vl",
"csh_on_dpst_crm_vl",
"instrmnts_hld_3rd_prty_crm_vl",
"id_trnsctn",
"ovrrd_enm_rsk_ctgry_nmbr",
"sgrgtd_ind",
"imm_nmbr_of_trnsctns",
"enm_imm_nttng_set_typ",
"imm_pstv_cmv_vl",
"imm_ngtv_cmv_vl",
"imm_crrnt_expsr_vl",
"imm_expsr_vl_pre_crm",
"enm_crdt_drvtv_prdct_typ",
"ovrrd_irb_rw_flr",
"lgd_adjstd_grnt_crm_vl",
"lgd_adjstd_crdt_drvtv_crm_vl",
"life_insrnc_plcy_crm_vl",
"lr_clnt_qccp_clrd_ind",
"enm_prmtnl_loan_typ",
"sbjct_close_out_clause_ind",
"ovrrd_saccr_strt_prd_yrs",
"ovrrd_saccr_end_prd_yrs",
"ovrrd_saccr_lst_exrcs_yrs",
"ovrrd_saccr_rsdl_mtrty_yrs",
"nw_dflt_exp_ind",
"spcfc_cr_adjstmnt_vl",
"new_dflt_cr_adj_wrt_offs",
"enm_rtl_rw_mthd",
"enm_corp_rw_mthd",
"trt_pstd_clltrl_in_saccr_ind",
"incrrd_cva_excld_ind",
"clltrl_dmstc_ccy_ind",
"wrt_off_vl",
"enm_saccr_multi_agrmnt",
"one_way_mrgn_agrmnt_ind",
"lambda_prmtr",
"lr_uk_cntrl_bnk_lblty_amnt",
"ovrrd_uk_saccr_rmnng_mtrty_dys",
"enm_swwr_expsr_mthd",
"swwr_mthd_vl",
"ccr_rprtng_excld_ind",
"sft_cmv_rprtng_excld_ind",
"lr_uk_boe_strlng_lblty_amnt",
"addtnl_adj_vl_own_fnds_rdctns",
"enm_oem_pstn_typ",
"enm_oem_rsk_ctgry",
"ntnl_amnt_rtnd_crdt_prtctn",
"ovrrd_rwa_no_scrtstn",
"enm_npe_scrtstn_typ",
"imm_expsr_vl_pre_crm_mrkt_data",
"imm_expsr_vl_pre_crm_strss",
"ovrrd_ccr_rprtng_ntnl",
"immtrl_free_dlvry_expsr_ind",
"enm_intngbl_asst_typ",
"fair_vld_ind",
"hldng_org_unit",
"unrtd_dbt_clltrl_elgbl_ind",
"instrmnt_chrctstcs_eqts_ind",
"spcltv_invstmnt_ind",
"vntr_cptl_invstmnt_ind",
"lgsltv_prgrmm_ind",
"dbt_rstrctr_hldng_ind",
"trnstnl_prvsn_lgcy_eqty_rw_ind",
"crss_brdr_trnsprttn_ind",
"slf_lqdtng_cntngnt_lblty_ind",
"enm_spclsd_lndng_typ",
"enm_uk_corp_unrtd_grd",
"fx_incm_msmtch_ind",
"uncndtnl_cncllble_cmmtmnts_ind",
"adc_loan_ind",
"prdntl_prprty_vl",
"rl_estt_cmpltd_ind",
"rl_estt_clm_enfrcbl_ind",
"rl_estt_clm_indpdnt_ind",
"rl_estt_prdnt_vltn_ind",
"cmprhnsv_dcmnt_ind",
"incm_prdcng_real_estt_ind",
"lien_rnk",
"prfrntl_adc_rw_ind",
"ovrrd_prfrntl_rw_ind",
"affrdblty_ind",
"qlfyng_cnstrctn_ind",
"frst_agrclrl_lnd_ind",
"prprty_vl_indpndnt_oblgr_ind",
"enm_rvlvng_typ",
"ovrrd_pd_flr",
"ovrrd_pd_flr_rtl",
"bacva_eepe_crrnt_mrkt_data",
"bacva_eepe_strss_clbrtn",
"dt_mtrty_bacva_crrnt_mrkt_data",
"dt_mtrty_bacva_strss_clbrtn",
"dt_lngst_mtrty_imm",
"ovrrd_nrly_flly_clltrlsd_ind",
"stndrdsd_run_ind",
"stndrdsd_run_excld_ind",
"excld_sa_in_stndrdsd_run",
"enm_cva_exmpt_rsn_eu",
"ovrrd_enm_c07_rtngs_usd",
"dly_rmrgng_prmpt_liq_ind",
"lgcy_eqty_rw",
"uk_cva_tp_excld_ind",
"alpha_add_on_amnt",
"airb_lgd_scrd_flr",
"a_irb_rsdntl_prprty_amnt",
"id_lr_cash_pooling",
"enm_lr_cash_pooling_typ",
"enm_lr_cntngnt_typ",
"ovrrd_enm_cntngnt_lr_avg_mthd",
"enm_due_dlgnc_instr_cqs_lt",
"enm_due_dlgnc_instr_cqs_st",
"id_prprty",
"enm_real_estt_trmnt",
"ovrrd_rlvnt_crdt_expsr_ind",
"fnd_shrs_prcntg",
"thrd_prty_fnd_rw_ind",
"enm_unfndd_crm_rw_apprch",
"ovrrd_enm_C34_08_row_allctn",
"obs_zero_ccf_ind",
"ovrrd_100_prcnt_dfltd_rw_ind",
"rgltr_dfnd_el_sclr",
"ipre_cntry_drgtn_ind",
"prmry_rsdnc_ind",
"cva_exmpt_incld_ind",
"use_nttng_ccy_as_dnmntn_ccy",
"id_c34_02_06_sft_cmv",
"dt_dflt_exp",
"enm_irb_real_estt_rprtng_trmnt",
"ovrrd_enm_C34_08_trtmnt",
"cr_expsr_cstm_1",
"cr_expsr_cstm_2",
"cr_expsr_cstm_3",
"cr_expsr_cstm_4",
"cr_expsr_cstm_5"]

import re

def find_missing_words(file_path, word_list):
    # Read the file as text
    with open(file_path, 'r', encoding='utf-8') as file:
        file_content = file.read()
    
    # List to store words not found in the file
    missing_words = []
    
    # Check each word
    for word in word_list:
        # Create regex pattern to find the word
        pattern = r'\b' + re.escape(word) + r'\b'
        
        # Search for the pattern
        matches = re.findall(pattern, file_content)
        
        # If word not found, add to missing_words list
        if len(matches) == 0:
            missing_words.append(word)
    
    return missing_words

# Example usage
file_path = "/workspaces/DSALabCodes/werk/Projects/Shared_Calcs/Branches/6_4_0/Aggregation/Consolidated_CR_Exposure_Inputs.xml"
dif 
missing = find_missing_words(file_path, lst)

if missing:
    print("Words not found in the XML file:")
    for word in missing:
        print(word)
else:
    print("All words were found in the XML file.")
